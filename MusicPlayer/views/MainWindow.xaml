<Window
    x:Class="MusicPlayer.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:MusicPlayer"
    xmlns:m="clr-namespace:MusicPlayer.Models"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:vms="clr-namespace:MusicPlayer.ViewModels"
    Width="{Binding WindowWidth, Mode=TwoWay}"
    Height="{Binding WindowHeight, Mode=TwoWay}"
    prism:ViewModelLocator.AutoWireViewModel="True"
    Left="{Binding WindowRect.X, Mode=TwoWay}"
    Top="{Binding WindowRect.Y, Mode=TwoWay}">

    <Window.Title>
        <Binding Path="DoublePlayer.Sounds">
            <Binding.Converter>
                <m:SoundNameConverter />
            </Binding.Converter>
        </Binding>
    </Window.Title>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/UserResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <StackPanel Grid.ColumnSpan="2">
            <StackPanel.Resources>

                <Style TargetType="Button">
                    <Setter Property="Padding" Value="3" />
                    <Setter Property="Margin" Value="2" />
                </Style>

            </StackPanel.Resources>

            <StackPanel Grid.Row="0" Orientation="Horizontal">

                <Button Command="{Binding PlayCommand}" Content="play" />

                <Button Command="{Binding StopCommand}" Content="stop" />

                <Button Content="pause/resume" />

                <Button Command="{Binding PlayBackCommand}" Content="back" />

                <Button Command="{Binding PlayNextCommand}" Content="next" />

                <TextBlock Margin="3" Text="mute" />

                <Slider
                    Name="VolumeControlSlider"
                    Width="250"
                    Margin="3"
                    IsSnapToTickEnabled="True"
                    Maximum="1.0"
                    Minimum="0"
                    SmallChange="0.01"
                    TickFrequency="0.01"
                    Value="{Binding DoublePlayer.Volume}" />

                <TextBlock Margin="3" Text="max" />


            </StackPanel>

            <ProgressBar
                x:Name="DurationSlider"
                Height="5"
                Margin="5,3"
                Foreground="LightBlue"
                Maximum="{Binding DoublePlayer.Duration}"
                Minimum="0"
                Value="{Binding DoublePlayer.PlayTime}" />

            <StackPanel Orientation="Horizontal">

                <TextBlock
                    x:Name="playTimeTextBox"
                    Margin="5,0,0,0"
                    FontSize="14"
                    Text="{Binding DoublePlayer.PlayTime, Converter={StaticResource DurationConverter}}" />

                <TextBlock
                    x:Name="separateTextBlock"
                    Margin="3,0"
                    FontSize="14"
                    Text="/" />

                <TextBlock
                    x:Name="DurationTextBlock"
                    FontSize="14"
                    Text="{Binding DoublePlayer.Duration, Converter={StaticResource DurationConverter}}" />

            </StackPanel>

            <TextBox
                x:Name="baseDirectoryPathTextBox"
                FontSize="14"
                Text="{Binding TreeViewModel.BaseDirectoryPath, Mode=TwoWay}" />


        </StackPanel>

        <TreeView
            Name="directoryTree"
            Grid.Row="1"
            Grid.Column="0"
            ItemsSource="{Binding TreeViewModel.MediaDirectories}">

            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                    <Setter Property="BorderBrush" Value="Gray" />
                    <Setter Property="BorderThickness" Value="1,0,0,0" />
                    <Setter Property="Padding" Value="4,0,0,0" />
                    <Setter Property="Margin" Value="1,0,0,1" />
                </Style>
            </TreeView.ItemContainerStyle>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <i:InvokeCommandAction Command="{Binding MediaFilesSettingCommand}" CommandParameter="{Binding ElementName=directoryTree, Path=SelectedItem}" />
                    <i:InvokeCommandAction Command="{Binding TreeViewModel.SelectDirectoryCommand}" CommandParameter="{Binding ElementName=directoryTree, Path=SelectedItem}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="m:MediaDirectory" ItemsSource="{Binding ChildDirectory}">
                    <ContentControl Content="{Binding Name}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding GetChildsCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ContentControl>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <Grid Grid.Row="0" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Button
                x:Name="randomSortButton"
                Grid.Row="2"
                Grid.Column="0"
                Command="{Binding RandomSortCommand}"
                Content="ランダムソート" />

            <Button
                x:Name="nameOrderSortButton"
                Grid.Row="2"
                Grid.Column="1"
                Command="{Binding NameOrderSortCommand}"
                Content="ファイル名順でソート" />

        </Grid>
        <ListView
            Name="musicListView"
            Grid.Row="1"
            Grid.Column="1"
            ItemsSource="{Binding SoundProvider.ViewingSounds}"
            SelectedValue="{Binding SelectedItem}" />

        <StatusBar
            Name="musicStatusBar"
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            VerticalAlignment="Bottom">

            <StackPanel Orientation="Horizontal">

                <Label Content="url &gt;" />
                <Label Grid.Column="0" Content="{Binding TreeViewModel.SelectedItem.FileInfo.FullName, UpdateSourceTrigger=PropertyChanged}" />

            </StackPanel>

        </StatusBar>

        <StackPanel
            Grid.Row="2"
            Grid.Column="1"
            HorizontalAlignment="Right"
            Orientation="Horizontal">

            <Button
                Height="auto"
                Margin="0,5,5,5"
                HorizontalAlignment="Right"
                Command="{Binding ShowLogWindowCommand}"
                Content="ログを表示" />

            <Button
                Height="auto"
                Margin="0,0,5,5"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Command="{Binding ShowSettingDialogCommand}"
                Content="設定"
                DockPanel.Dock="Right" />

        </StackPanel>
    </Grid>


</Window>
